@page "/"
@using MediatR
@using Microsoft.EntityFrameworkCore
@using SecretSanta.Core.Domain
@using SecretSanta.Core.Domain.Contexts
@inject IMediator _mediatr
@inject NavigationManager NavigationManager


<ErrorBanner ErrorMessage=@ErrorMessage />

  <div class="jumbotron pt-4">
      <h2 class="display-4 align-left">
      <i><img src="pics/emoji/grinning.svg" height="64" alt="Grinning icon"/></i>
       Still to pick someone 
      </h2>
      <p class="lead">If you still need to pick someone, click your picture below</p>
      <hr class="my-4">
      <div class="row">
      
          @{
              if (AllPeeps != null)
              {
                  foreach (var ToPick in AllPeeps.Where(e => !e.picking))
                  {
                      <div class="col-sm-6 col-md-4 col-lg-2">
                          @{
                              var navLink = $"Chosen/{ToPick.ID}";
                              <NavLink href=@navLink>
                                  <img src="pics/@ToPick.pic" alt="@ToPick.name Picture" title="@ToPick.name" class="img-fluid">
                              </NavLink>
                          }
                      </div>
                  }
              }
          }
          
      </div>
  </div>


  <div class="jumbotron pt-4">
      <h2 class="display-4 align-left">
      <i><img src="./pics/emoji/looky.svg" height="64" alt="Eyes icon"/></i>
      Cant remember who you picked? 
      </h2>
      <p class="lead">If you still need a wee reminder, click your picture below</p>
      <hr class="my-4">
      <div class="row">
            @{
                if (AllPeeps != null)
                {
                    foreach (var ToPick in AllPeeps.Where(e => e.picking))
                    {
                        <div class="col-sm-6 col-md-4 col-lg-2">
                            @{
                                var navLink = $"Chosen/{ToPick.ID}";
                                <NavLink href=@navLink>
                                    <img src="pics/@ToPick.pic" alt="@ToPick.name Picture" title="@ToPick.name" class="img-fluid">
                                </NavLink>
                            }
                        </div>
                    }
                }
            }
      </div>
</div>

@code {
    [CascadingParameter]
    public State.CascadingAppState AppState { get; set; }
    
    private string ErrorMessage;
    private List<Peeps> AllPeeps;
    
    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        ErrorMessage = string.Empty;
        
        try
        {
            var getPeeps = _mediatr.Send(new Core.Queries.FetchAllPeeps.Query
            {
                Year = AppState.ActiveYear
            }).Result;

            if (getPeeps.Success)
            {
                AllPeeps = getPeeps.Peeps;
            }
        } 
        catch (Exception ex)
        {
            var except = ex.Message;
            ErrorMessage = ex.Message;
        }
    }
}